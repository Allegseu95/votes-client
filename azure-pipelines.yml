# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

name: $(MajorVersion).$(MinorVersion).$(Date:yy)$(DayOfYear)$(Rev:.rr)

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  netVersion: '6.x'

steps:
- task: DotNetCoreCLI@2
  displayName: "Restauración de dependencias"
  inputs:
    command: 'restore'
    projects: '$(solution)'
    feedsToUse: 'select'
    
- task: DotNetCoreCLI@2
  displayName: 'Compilación de solución'
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'sudo MSSQL_PID=Developer ACCEPT_EULA=Y MSSQL_SA_PASSWORD='Y6Of084ft9-' /opt/mssql/bin/mssql-conf -n setup'

- task: DotNetCoreCLI@2
  displayName: 'Ejecución de tests'
  inputs:
    command: 'test'
    projects: '**/*Test*.csproj'
    arguments: '--configuration $(buildConfiguration)'
    
- task: DotNetCoreCLI@2
  displayName: 'Publicación de artefactos'
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    modifyOutputPath: false

- task: PublishPipelineArtifact@1
  displayName: 'Delivery de paquete'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'myWebsiteName'

